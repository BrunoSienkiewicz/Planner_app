{"ast":null,"code":"var _jsxFileName = \"/mnt/e/Planner_App/planner-app-frontend/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchEvents(selectedDate);\n  }, [selectedDate]);\n  const fetchEvents = async date => {\n    const dateString = date.toISOString().slice(0, 10);\n    const response = await fetch('/api/events/get-by-month', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        date: dateString\n      })\n    });\n    const data = await response.json();\n    setEvents(data);\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  const handleCalendarChange = (value, event) => {\n    if (value instanceof Array) {\n      const [start] = value;\n      if (start instanceof Date) {\n        handleDateChange(start);\n      }\n    }\n    ;\n  };\n  const handleEventClick = event => {\n    alert(`Selected event: ${event.title}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: handleCalendarChange,\n        value: selectedDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Events for \", selectedDate.toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), events.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => handleEventClick(event),\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), event.description]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No events found for this month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ikQcTB6zon2TaCENo6LoJc3IlgM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","jsxDEV","_jsxDEV","Dashboard","_s","events","setEvents","selectedDate","setSelectedDate","Date","fetchEvents","date","dateString","toISOString","slice","response","fetch","method","headers","body","JSON","stringify","data","json","handleDateChange","handleCalendarChange","value","event","Array","start","handleEventClick","alert","title","className","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleDateString","length","map","onClick","description","id","_c","$RefreshReg$"],"sources":["/mnt/e/Planner_App/planner-app-frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { Value } from 'react-calendar/dist/cjs/shared/types';\n\ninterface Event {\n  id: number;\n  title: string;\n  description: string;\n  date: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [events, setEvents] = useState<Event[]>([]);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    fetchEvents(selectedDate);\n  }, [selectedDate]);\n\n  const fetchEvents = async (date: Date) => {\n    const dateString = date.toISOString().slice(0, 10);\n    const response = await fetch('/api/events/get-by-month', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ date: dateString })\n    });\n    const data = await response.json();\n    setEvents(data);\n  };\n\n  const handleDateChange = (date: Date) => {\n    setSelectedDate(date);\n  };\n\n  const handleCalendarChange = (value: Value, event: React.MouseEvent<HTMLButtonElement>) => {\n    if (value instanceof Array) {\n        const [start] = value;\n        if (start instanceof Date) {\n            handleDateChange(start);\n        }\n    };\n  };\n\n  const handleEventClick = (event: Event) => {\n    alert(`Selected event: ${event.title}`);\n  };\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"calendar\">\n        <Calendar onChange={handleCalendarChange} value={selectedDate} />\n      </div>\n      <div className=\"event-list\">\n        <h2>Events for {selectedDate.toLocaleDateString()}</h2>\n        {events.length > 0 ? (\n          <ul>\n            {events.map((event) => (\n              <li key={event.id} onClick={() => handleEventClick(event)}>\n                <strong>{event.title}</strong>\n                <br />\n                {event.description}\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No events found for this month</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}