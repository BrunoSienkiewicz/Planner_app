{"ast":null,"code":"var _jsxFileName = \"/mnt/e/Planner_App/planner-app-frontend/src/pages/ToDo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDo = () => {\n  _s();\n  const [toDoList, setToDoList] = useState([]);\n  const [doingList, setDoingList] = useState([]);\n  const [doneList, setDoneList] = useState([]);\n  const [idCounter, setIdCounter] = useState(0);\n  const handleAddToDoItem = event => {\n    event.preventDefault();\n    // const itemText = event.currentTarget.elements.newToDoItem.value;\n    // if (itemText) {\n    //   const newTask: Task = {\n    //     id: idCounter,\n    //     title: itemText,\n    //     description: '',\n    //     date: '',\n    //   };\n    //   setToDoList([...toDoList, newTask]);\n    //   setIdCounter(idCounter + 1);\n    //   event.currentTarget.reset();\n    // }\n  };\n\n  const handleMoveToDoing = itemIndex => {\n    const item = toDoList[itemIndex];\n    setToDoList(toDoList.filter((_, index) => index !== itemIndex));\n    setDoingList([...doingList, item]);\n  };\n  const handleMoveToDone = itemIndex => {\n    const item = doingList[itemIndex];\n    setDoingList(doingList.filter((_, index) => index !== itemIndex));\n    setDoneList([...doneList, item]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Trello-like To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddToDoItem,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newToDoItem\",\n            placeholder: \"Add a new item\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: toDoList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveToDoing(toDoList.indexOf(item)),\n              children: \"Move to Doing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Doing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: doingList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleMoveToDone(doingList.indexOf(item)),\n              children: \"Move to Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: doneList.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDo, \"FUOB3OGBu9DoL9nF7uuh0vU4Q1M=\");\n_c = ToDo;\nexport default ToDo;\nvar _c;\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ToDo","_s","toDoList","setToDoList","doingList","setDoingList","doneList","setDoneList","idCounter","setIdCounter","handleAddToDoItem","event","preventDefault","handleMoveToDoing","itemIndex","item","filter","_","index","handleMoveToDone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","map","title","onClick","indexOf","id","_c","$RefreshReg$"],"sources":["/mnt/e/Planner_App/planner-app-frontend/src/pages/ToDo.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  date: string;\n}\n\nconst ToDo: React.FC = () => {\n  const [toDoList, setToDoList] = useState<Task[]>([]);\n  const [doingList, setDoingList] = useState<Task[]>([]);\n  const [doneList, setDoneList] = useState<Task[]>([]);\n  const [idCounter, setIdCounter] = useState<number>(0);\n\n  const handleAddToDoItem = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    // const itemText = event.currentTarget.elements.newToDoItem.value;\n    // if (itemText) {\n    //   const newTask: Task = {\n    //     id: idCounter,\n    //     title: itemText,\n    //     description: '',\n    //     date: '',\n    //   };\n    //   setToDoList([...toDoList, newTask]);\n    //   setIdCounter(idCounter + 1);\n    //   event.currentTarget.reset();\n    // }\n  };\n\n  const handleMoveToDoing = (itemIndex: number) => {\n    const item = toDoList[itemIndex];\n    setToDoList(toDoList.filter((_, index) => index !== itemIndex));\n    setDoingList([...doingList, item]);\n  };\n\n  const handleMoveToDone = (itemIndex: number) => {\n    const item = doingList[itemIndex];\n    setDoingList(doingList.filter((_, index) => index !== itemIndex));\n    setDoneList([...doneList, item]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Trello-like To-Do List</h1>\n      <div className=\"lists-container\">\n        <div className=\"list\">\n          <h2>To Do</h2>\n          <form onSubmit={handleAddToDoItem}>\n            <input type=\"text\" name=\"newToDoItem\" placeholder=\"Add a new item\" />\n            <button type=\"submit\">Add</button>\n          </form>\n          <ul>\n            {toDoList.map((item) => (\n              <li key={item.id}>\n                <div>{item.title}</div>\n                <button onClick={() => handleMoveToDoing(toDoList.indexOf(item))}>Move to Doing</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"list\">\n          <h2>Doing</h2>\n          <ul>\n            {doingList.map((item) => (\n              <li key={item.id}>\n                <div>{item.title}</div>\n                <button onClick={() => handleMoveToDone(doingList.indexOf(item))}>Move to Done</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"list\">\n          <h2>Done</h2>\n          <ul>\n            {doneList.map((item) => (\n              <li key={item.id}>\n                <div>{item.title}</div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ToDo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}